apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME
  namespace: $KUBE_NAMESPACE
  annotations:
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME
  template:
    metadata:
      labels:
        env: $CI_ENVIRONMENT_SLUG
        app: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME
        build: "$CI_COMMIT_SHORT_SHA"
      annotations:
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    spec:
      containers:
      - name: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME
        image: $CI_IMAGE
        imagePullPolicy: IfNotPresent
        env:
        - name: ENVIRONMENT
          value: $CI_ENVIRONMENT_NAME
        - name: GOOGLE_PROJECT_ID
          value: $GOOGLE_PROJECT_ID
        - name: KUBE_REPLICA_SET
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBE_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ASPNETCORE_ENVIRONMENT
          value: $CI_ENVIRONMENT_ASPNETCORE
        - name: Logging__Console__FormatterName
          value: "json-google"
        - name: Logging__Console__FormatterOptions__SingleLine
          value: "true"
        - name: Logging__Console__FormatterOptions__IncludeScopes
          value: "true"
        - name: Logging__Console__FormatterOptions__UseUtcTimestamp
          value: "true"
        - name: Logging__Console__FormatterOptions__JsonWriterOptions__Indented
          value: "false"
        - name: ConnectionStrings__DbConnection
          value: $CI_ENVIRONMENT_DBCONNECTION
        - name: SlackOptions__Enabled
          value: "true"
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/liveness
            port: 80
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/readiness
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.010"
          limits:
            memory: "256Mi"
            cpu: "0.50"
      imagePullSecrets:
      - name: gitlab-registry-migom
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME-service
  namespace: $KUBE_NAMESPACE
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    name: http
  selector:
    app: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/ingress.allow-http: "false"
    cert-manager.io/cluster-issuer: "$CI_ENVIRONMENT_LETSENCRYPT"
    nginx.ingress.kubernetes.io/proxy-body-size: "5m"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME-ingress
  namespace: $KUBE_NAMESPACE
spec:
  rules:
  - host: $CI_ENVIRONMENT_HOSTNAME
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME-service
            port:
              number: 80
  tls:
  - hosts:
    - $CI_ENVIRONMENT_HOSTNAME
    secretName: $CI_ENVIRONMENT_SLUG-$CI_PROJECT_NAME-tls
---
